import os
import sys
import subprocess
from pathlib import Path

def main():
    # Directorio del proyecto generado
    project_dir = Path(os.getcwd())
    
    # Definir el contenido del .gitignore
    gitignore_content = """# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Virtual environment
venv/
.env/
*.venv

# Dependency directories
pip-wheel-metadata/
*.egg-info/
dist/
build/

# IDE settings
.vscode/
.idea/

# Logs
logs/
*.log
"""
    # Ruta del .gitignore que se va a crear
    gitignore_path = project_dir / ".gitignore"
    
    # Crear el archivo .gitignore dinámicamente
    with open(gitignore_path, "w", encoding="utf-8") as f:
        f.write(gitignore_content)
    
    print("Dynamically created .gitignore")
    
    
    # Crear entorno virtual
    print("Creating virtual environment...")
    subprocess.run("python -m venv venv", shell=True, check=True)
    
    # Determinar ruta de los scripts del entorno virtual
    venv_bin = "venv\\Scripts" if os.name == "nt" else "venv/bin"
    activate_script = f'{venv_bin}/activate'
    
    # Activar entorno virtual (solo informativo, no cambia el shell actual)
    print(f"Virtual environment created. Activate it using: source {activate_script} (Linux/macOS) or {venv_bin}\\activate (Windows)")
    
    # Determinar ruta de pip según el sistema operativo
    pip_path = f'{venv_bin}/pip'
    
    # Instalar dependencias del requirements.txt
    print("Installing dependencies from requirements.txt...")
    subprocess.run(f'"{pip_path}" install -r requirements.txt', shell=True, check=True)
    
    # Inicializar repositorio Git
    subprocess.run("git init", shell=True, check=True)
    
    # Agregar todos los archivos y hacer el primer commit
    subprocess.run('git add . && git commit -m "Initial commit generated by Cookiecutter"', shell=True, check=True)
    print("Git repository initialized and first commit created")
    
    print("✅ Project correctly initialized")

if __name__ == '__main__':
    main()
